Select * from VACCINES
Order by 3,4;

Select * from Deaths
Where continent is not null 
Order by 3,4;

--Select data for Project

Select total_cases, new_cases, total_deaths, population,DATE_,LOCATION
From Deaths
Where continent is not null 
order by 1,2;

--Looking at total Deaths & total Cases

Select total_cases, total_deaths,DATE_,LOCATION,(total_deaths/total_cases)*100 as Death_Percentage
From Deaths
Where continent is not null 
order by 1,2;

--Looking at total Deaths & total Cases in United States

Select total_cases, total_deaths,DATE_,LOCATION,(total_deaths/total_cases)*100 as Death_Percentage
From Deaths
where Location like '%States%' and  continent is not null 
order by 1,2;

--Looking at total Deaths & Population

Select DATE_,LOCATION, Population, total_cases, total_deaths,(total_cases/Population)*100 as Case_Percentage
From Deaths
--where Location like '%States%'
Where continent is not null 
order by 1,2;

--Looking at Countries with highest Infection rate

Select Population,LOCATION, Max(total_cases) as Highestinfectioncount,Max((total_cases/Population)*100) as Case_Percentage
From Deaths
Where continent is not null 
Group by POPULATION,LOCATION
order by Case_Percentage DESC;

--Showing countries with highest death count vs population

Select Max(CAST(TOTAL_DEATHS AS INT)) as Highestdeathcount,LOCATION
From Deaths
Where continent is not null 
Group by Location 
order by Highestdeathcount DESC;

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select Continent,MAX(cast(Total_deaths as int)) as TotalDeathCount
From Deaths
--Where location like '%states%'
Where continent is not null 
Group by Continent
order by TotalDeathCount desc;

-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From Deaths
--Where location like '%states%'
where continent is not null 
Group By DATE_
order by 1,2;

-- Join

Select dea.*
from Deaths dea, VACCINES vac
where dea.Location = vac.Location 
and dea.DATE_=vac.DATE_;


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

Select dea.continent, dea.location, dea.DATE_, dea.population, vac.new_vaccinations
,SUM(Cast(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.location, dea.Date_) as RollingPeopleVaccinated
from Deaths dea, VACCINES vac
where dea.Location = vac.Location 
and dea.DATE_=vac.DATE_ and  dea.continent is not null 
order by 1,2,3;

---Select 'Location', 'Location'
---from dual;

-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac (Continent, Location, Date_, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.DATE_, dea.population, vac.new_vaccinations
,SUM(Cast(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.location, dea.Date_) as RollingPeopleVaccinated
from Deaths dea, VACCINES vac
where dea.Location = vac.Location 
and dea.DATE_=vac.DATE_ and  dea.continent is not null 
order by 1,2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
Create Table PercentPopulationVaccinated
(
Continent varchar(255),
Location varchar(255) ,
Date_ Date,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
);

Insert into PercentPopulationVaccinated
Select dea.continent, dea.location, dea.DATE_, dea.population, vac.new_vaccinations
,SUM(Cast(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.location, dea.Date_) as RollingPeopleVaccinated
from Deaths dea, VACCINES vac
where dea.Location = vac.Location 
and dea.DATE_=vac.DATE_ and  
--dea.continent is not null 
--order by 1,2,3

Select (RollingPeopleVaccinated/Population)*100
From PercentPopulationVaccinated




-- Creating View to store data for later visualizations

Create View PercentPopVaccinated as
Select dea.continent, dea.location, dea.DATE_, dea.population, vac.new_vaccinations
,SUM(Cast(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.location, dea.Date_) as RollingPeopleVaccinated
from Deaths dea, VACCINES vac
where dea.Location = vac.Location 
and dea.DATE_=vac.DATE_ and  
dea.continent is not null 

Select *
from PercentPopVaccinated;